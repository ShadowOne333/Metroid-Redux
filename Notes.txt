04BE1: Brinstar Normal Missile Door Consumption (how many missiles it requires to open this door)

04BE3: Brinstar Strong Missile Door Consumption (these doors aren't in Brinstar but they're basically the purple/orange door in Ridley/Tourian respectively)

07F66-07FBF: Random unused table (I EA'd this for some reason, possibly to make IPS peek analysis easier since 0.3 does this too. 0.4 had it like vanilla, so you should probably discard this edit and revert it to vanilla, it's stupid)

08BE1: Norfair Missile Door Consumption

0CBE1: Tourian Missile Door Consumption

10BE1: Kraid Missile Door Consumption

11E2B-11E4F: Unknown (possibly useless since 0.5.2 doesn't have this, but I'd still like to know)

14BE1: Ridley Missile Door Consumption

1533B: Unknown (possibly useless since 0.5.2 doesn't have this, but I'd still like to know)

39021: Unknown (setting this to anything outside of range 01-07 causes game to be unable to boot up, something to do with Editroid)

39972: Which controller to read inputs from regarding Game Over debug combination (player 2 in vanilla, changing it to player 1 to allow you to save whenever) - 39974 and 3C9C6 hold the value for the button combo, with default being Up+A

399E2: Y position of cornermap HUD (this position does not update in real time, you have to reset to see the changes)

399EA: X position of cornermap HUD (same as above)

3C012-3C027: Part of RandomNumbers routine (Heavily altered to more closely resemble the FDS version)

3C0C1: Where to initialize RandomNumber2 to (Related to RNG fix, check disassembly for more info)

3C941-3C954: A few 20F1E1s followed by a bunch of EAs that replace the NARPASSWORD code (this has to do with speeding up door transitions)

3CB68-3CB69: JSR to DisplayBar routine in UpdateWorld (HUD rendering procedure, 0.4 repoints it to $7EA8, wherever that is) [search "UpdateWorld" in disassembly doc's game engine bank for more info about how this works]

3CC34-3CC35: Pointer for Samus's running action handler (0.4 repoints it to $7F30, again, wherever that is) [search "GoSamusHandler" in disassembly doc's game engine bank for more info about Samus's action handlers]

3CE82: Lower bit compare that triggers the low health beep

3D106: How high a ceiling above morphball can exist to trigger unmorphing (Morphball ceiling fix, link for more context: https://forum.metroidconstruction.com/index.php/topic,3171.0.html)

3DE4C: Value in ItemDropTbl [3DE45-3DE4C] (I replaced this "no item" byte with a missile byte, increasing the drop rate of missiles)

3E0E0: How many bytes from the DataDisplayTbl [3E1C9-3E1F0] to use (Each 4 bytes removed is one sprite removed from the HUD display, starting from the bottom of the table. If this byte is not a multiple of 4, the game WILL crash. v0.4 did this to reduce sprite count to account for the minimap but ultimately the sprite flickering is rare enough to keep it vanilla. If you really want to reduce sprite count through this, I'd recommend bringing it down to $14, keeping just the counter digits and one missile sprite/tile to distinguish the missile count from the energy count. It's ultimately whatever, though.)

3E164: X position of first HUD E-Tank sprite

3E18C: Y position of HUD E-Tank sprites

3E19F: In what direction should succeeding E-Tanks should go relative to the first one (goes in tandem with 3E1A0)

3E1A0: X distance betweeen HUD E-Tank sprites relative to each other

3E1C9-3E1EE: additional HUD changes that I still need to document

3F4C8: How many missiles you get from missile drops (NOTE: missile pickups work differently in Tourian/with Metroids, basically you get more missiles the more missile packs you have)

3FFE6-3FFF5: Frankly I have no clue what this is or where it came from.



